## Project study: Trends in Startups

Role: a TechCrunch reporter
Task: write an article on the rising treands in the startup world

# Q1 Calculate the total number of companies in the tables
SELECT COUNT(*)
FROM startups;

# Q2 To know the total value of all companies in this table. 'valuation' column.
SELECT SUM(valuation)
FROM startups;

# Q3 Edit the query so that it returns the maximum amount of money raised, during ‘Seed’ stage.
SELECT MAX(raised)
FROM startups
WHERE stage = 'Seed';

# Q4 Let's find out the valuations among different sectors:
# Return the average valuation, in each category.
SELECT category, AVG(valuation)
FROM startups
GROUP BY category;

# Q5 Return the average valuation, in each category. Round the averages to two decimal places. Lastly, order the list from highest averages to lowest.
SELECT category, ROUND(AVG(valuation), 2)
FROM startups
GROUP BY category. --GROUP BY 1 has the same meaning with previous syntax
ORDER BY 2 DESC;

# Q6 What are the most competitive markets?
SELECT category, COUNT(*)
FROM startups
GROUP BY category
HAVING COUNT(*) >3
ORDER BY 2 DESC;

# Q7 Let's see if there's a difference in startups sizes among different locations:
SELECT location, ROUND(AVG(employees), 0)
FROM startups
GROUP BY location
HAVING ROUND(AVG(employees), 0) > 500
ORDER BY 2 DESC;


## Project study: Analyze Hacker News Trends
# Colunms in it:
--title: the title of the story
--user: the user who submitted the story
--score: the score of the story
--timestamp: the time of the story
--url: the link of the story

# Q1 Hacker News Moderating
-- STEP 1, culculate the total score
-- STEP 2, find users who got combined scores more than 200 (WHY 200?)
SELECT user, SUM(score)
FROM hacker_news
GROUP BY user
HAVING SUM(score) >200
ORDER BY 2 DESC;

--STEP 3, sum those users' scores and devided by the total scores.
SELECT (517 + 309 + 304 +282) / 6366.0; [That is 22%]
SELECT (517 + 309 + 304 +282) / 6366;  [WRONG. got 0]

-- STEP 4, The url of the video is: https://www.youtube.com/watch?v=dQw4w9WgXcQ How many times has each offending user posted this link?
SELECT user, COUNT(*)
FROM hacker_news
WHERE url LIKE '%watch?v=dQw4w9WgXcQ%'
GROUP BY user
ORDER BY COUNT(*) DESC;

-- STEP 5, CASE statement with count
SELECT CASE
   WHEN url LIKE '%github.com%' THEN 'GitHub'
   WHEN url LIKE '%medium.com%' THEN 'Medium'
   WHEN url LIKE '%nytime.com%' THEN 'New York Times'
   ELSE THEN 'Other'
  END AS 'Source', COUNT(*)
FROM hacker_news
GROUP BY 1;





